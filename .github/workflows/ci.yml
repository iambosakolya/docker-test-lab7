# Назва пайплайна
name: CI/CD Pipeline

# Умови запуску: при пуші в гілку main або pull request
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # Перше завдання: збірка і тестування
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: PYTHONPATH=. pytest # <-- ОНОВЛЕНА КОМАНДА

  # Друге завдання: збірка Docker-образу та публікація в Docker Hub
  docker-build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/devops-lab-7:latest

  # Третє завдання: імітація розгортання на staging-сервер
  deploy-to-staging:
    needs: docker-build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Simulate deployment to staging
        run: |
          echo "Pulling image from Docker Hub..."
          echo "Stopping previous container..."
          echo "Starting new container..."
          echo "Deployment to staging server completed!"
